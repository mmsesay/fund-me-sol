{
	"id": "8440f07c608cc9fc4461edb35182e14f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FundMe.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.9.0;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\n\ncontract FundMe {\n  using SafeMathChainlink for uint256;\n  mapping(address => uint256) public addressToAmountFunded;\n  address owner;\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  // payable:\n  /*\n    Test Funding transaction\n    0.1 ETHER is 100000000000000000 WEI\n  */\n  function fund() public payable {\n    // setting a minimum payable to 50 USD\n    uint256 minimumUSD = 50 * 10 * 18;\n\n    // check if 1gwei < $50\n    require(getConversionRate(msg.value) >= minimumUSD, \"You need to spenf more ETH!\");\n\n    addressToAmountFunded[msg.sender] += msg.value;\n  }\n\n  function getVersion() public view returns (uint256) {\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\n    return priceFeed.version();\n  }\n\n  function getPrice() public view returns (uint256) {\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\n    (,int256 answer,,,) = priceFeed.latestRoundData();\n    return uint256(answer);\n    // 3,017.44772435 ETH to USD\n  }\n\n  // 1000000000 = 1 Gwei \n  function getConversionRate(uint256 ethAmount) public view returns (uint256) {\n    uint256 ethPrice = getPrice();\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\n    return ethAmountInUsd; // 302.811000000000000000\n  }\n\n  function withdraw() payable public {\n    // only the admin/owner can widthdraw funds\n    msg.sender.transfer(address(this).balance );\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/FundMe.sol": {
				"FundMe": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressToAmountFunded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "getConversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/FundMe.sol\":213:1680  contract FundMe {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FundMe.sol\":350:400  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/FundMe.sol\":350:400  constructor() public {... */\n  pop\n    /* \"contracts/FundMe.sol\":385:395  msg.sender */\n  caller\n    /* \"contracts/FundMe.sol\":377:382  owner */\n  0x01\n  0x00\n    /* \"contracts/FundMe.sol\":377:395  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FundMe.sol\":213:1680  contract FundMe {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundMe.sol\":213:1680  contract FundMe {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e47d6f3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6e5b6b28\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb60d4288\n      eq\n      tag_7\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/FundMe.sol\":789:983  function getVersion() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/FundMe.sol\":789:983  function getVersion() public view returns (uint256) {... */\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":1541:1678  function withdraw() payable public {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/FundMe.sol\":272:328  mapping(address => uint256) public addressToAmountFunded */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"contracts/FundMe.sol\":272:328  mapping(address => uint256) public addressToAmountFunded */\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_15:\n        /* \"contracts/FundMe.sol\":272:328  mapping(address => uint256) public addressToAmountFunded */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":1293:1537  function getConversionRate(uint256 ethAmount) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"contracts/FundMe.sol\":1293:1537  function getConversionRate(uint256 ethAmount) public view returns (uint256) {... */\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_19:\n        /* \"contracts/FundMe.sol\":1293:1537  function getConversionRate(uint256 ethAmount) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":987:1263  function getPrice() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/FundMe.sol\":987:1263  function getPrice() public view returns (uint256) {... */\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":497:785  function fund() public payable {... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/FundMe.sol\":789:983  function getVersion() public view returns (uint256) {... */\n    tag_10:\n        /* \"contracts/FundMe.sol\":832:839  uint256 */\n      0x00\n        /* \"contracts/FundMe.sol\":847:878  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":903:945  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"contracts/FundMe.sol\":847:946  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":959:968  priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":959:976  priceFeed.version */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54fd4d50\n        /* \"contracts/FundMe.sol\":959:978  priceFeed.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"contracts/FundMe.sol\":959:978  priceFeed.version() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/FundMe.sol\":959:978  priceFeed.version() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_30:\n        /* \"contracts/FundMe.sol\":959:978  priceFeed.version() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":952:978  return priceFeed.version() */\n      swap2\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":789:983  function getVersion() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundMe.sol\":1541:1678  function withdraw() payable public {... */\n    tag_12:\n        /* \"contracts/FundMe.sol\":1630:1640  msg.sender */\n      caller\n        /* \"contracts/FundMe.sol\":1630:1649  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundMe.sol\":1630:1673  msg.sender.transfer(address(this).balance ) */\n      0x08fc\n        /* \"contracts/FundMe.sol\":1650:1671  address(this).balance */\n      selfbalance\n        /* \"contracts/FundMe.sol\":1630:1673  msg.sender.transfer(address(this).balance ) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/FundMe.sol\":1630:1673  msg.sender.transfer(address(this).balance ) */\n      pop\n        /* \"contracts/FundMe.sol\":1541:1678  function withdraw() payable public {... */\n      jump\t// out\n        /* \"contracts/FundMe.sol\":272:328  mapping(address => uint256) public addressToAmountFunded */\n    tag_16:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FundMe.sol\":1293:1537  function getConversionRate(uint256 ethAmount) public view returns (uint256) {... */\n    tag_20:\n        /* \"contracts/FundMe.sol\":1360:1367  uint256 */\n      0x00\n        /* \"contracts/FundMe.sol\":1375:1391  uint256 ethPrice */\n      dup1\n        /* \"contracts/FundMe.sol\":1394:1404  getPrice() */\n      tag_35\n        /* \"contracts/FundMe.sol\":1394:1402  getPrice */\n      tag_23\n        /* \"contracts/FundMe.sol\":1394:1404  getPrice() */\n      jump\t// in\n    tag_35:\n        /* \"contracts/FundMe.sol\":1375:1404  uint256 ethPrice = getPrice() */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":1410:1432  uint256 ethAmountInUsd */\n      0x00\n        /* \"contracts/FundMe.sol\":1460:1479  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/FundMe.sol\":1447:1456  ethAmount */\n      dup5\n        /* \"contracts/FundMe.sol\":1436:1444  ethPrice */\n      dup4\n        /* \"contracts/FundMe.sol\":1436:1456  ethPrice * ethAmount */\n      mul\n        /* \"contracts/FundMe.sol\":1435:1479  (ethPrice * ethAmount) / 1000000000000000000 */\n      dup2\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      div\n        /* \"contracts/FundMe.sol\":1410:1479  uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":1492:1506  ethAmountInUsd */\n      dup1\n        /* \"contracts/FundMe.sol\":1485:1506  return ethAmountInUsd */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1293:1537  function getConversionRate(uint256 ethAmount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FundMe.sol\":987:1263  function getPrice() public view returns (uint256) {... */\n    tag_23:\n        /* \"contracts/FundMe.sol\":1028:1035  uint256 */\n      0x00\n        /* \"contracts/FundMe.sol\":1043:1074  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":1099:1141  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"contracts/FundMe.sol\":1043:1142  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":1150:1163  int256 answer */\n      0x00\n        /* \"contracts/FundMe.sol\":1170:1179  priceFeed */\n      dup2\n        /* \"contracts/FundMe.sol\":1170:1195  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/FundMe.sol\":1170:1197  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"contracts/FundMe.sol\":1170:1197  priceFeed.latestRoundData() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/FundMe.sol\":1170:1197  priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:18   */\n      0xa0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_41:\n        /* \"contracts/FundMe.sol\":1170:1197  priceFeed.latestRoundData() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1148:1197  (,int256 answer,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1218:1224  answer */\n      dup1\n        /* \"contracts/FundMe.sol\":1203:1225  return uint256(answer) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":987:1263  function getPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundMe.sol\":497:785  function fund() public payable {... */\n    tag_25:\n        /* \"contracts/FundMe.sol\":577:595  uint256 minimumUSD */\n      0x00\n        /* \"contracts/FundMe.sol\":598:610  50 * 10 * 18 */\n      0x2328\n        /* \"contracts/FundMe.sol\":577:610  uint256 minimumUSD = 50 * 10 * 18 */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":685:695  minimumUSD */\n      dup1\n        /* \"contracts/FundMe.sol\":653:681  getConversionRate(msg.value) */\n      tag_43\n        /* \"contracts/FundMe.sol\":671:680  msg.value */\n      callvalue\n        /* \"contracts/FundMe.sol\":653:670  getConversionRate */\n      tag_20\n        /* \"contracts/FundMe.sol\":653:681  getConversionRate(msg.value) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/FundMe.sol\":653:695  getConversionRate(msg.value) >= minimumUSD */\n      lt\n      iszero\n        /* \"contracts/FundMe.sol\":645:727  require(getConversionRate(msg.value) >= minimumUSD, \"You need to spenf more ETH!\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f75206e65656420746f207370656e66206d6f726520455448210000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"contracts/FundMe.sol\":771:780  msg.value */\n      callvalue\n        /* \"contracts/FundMe.sol\":734:755  addressToAmountFunded */\n      0x00\n        /* \"contracts/FundMe.sol\":734:767  addressToAmountFunded[msg.sender] */\n      dup1\n        /* \"contracts/FundMe.sol\":756:766  msg.sender */\n      caller\n        /* \"contracts/FundMe.sol\":734:767  addressToAmountFunded[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FundMe.sol\":734:780  addressToAmountFunded[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundMe.sol\":497:785  function fund() public payable {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ca8500f14518e769ee5f427e1db3a4cd857882f270f0662d85b742889e0c622864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610486806100616000396000f3fe6080604052600436106100555760003560e01c80630d8e6e2c1461005a5780633ccfd60b146100855780633e47d6f31461008f5780636e5b6b28146100f457806398d5fdca14610143578063b60d42881461016e575b600080fd5b34801561006657600080fd5b5061006f610178565b6040518082815260200191505060405180910390f35b61008d610219565b005b34801561009b57600080fd5b506100de600480360360208110156100b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610262565b6040518082815260200191505060405180910390f35b34801561010057600080fd5b5061012d6004803603602081101561011757600080fd5b810190808035906020019092919050505061027a565b6040518082815260200191505060405180910390f35b34801561014f57600080fd5b506101586102a9565b6040518082815260200191505060405180910390f35b61017661037c565b005b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d857600080fd5b505afa1580156101ec573d6000803e3d6000fd5b505050506040513d602081101561020257600080fd5b810190808051906020019092919050505091505090565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561025f573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b6000806102856102a9565b90506000670de0b6b3a76400008483028161029c57fe5b0490508092505050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561030b57600080fd5b505afa15801561031f573d6000803e3d6000fd5b505050506040513d60a081101561033557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050915050809250505090565b600061232890508061038d3461027a565b1015610401576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75206e65656420746f207370656e66206d6f72652045544821000000000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505056fea2646970667358221220ca8500f14518e769ee5f427e1db3a4cd857882f270f0662d85b742889e0c622864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x486 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH2 0x37C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x285 PUSH2 0x2A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x29C JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2328 SWAP1 POP DUP1 PUSH2 0x38D CALLVALUE PUSH2 0x27A JUMP JUMPDEST LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F75206E65656420746F207370656E66206D6F726520455448210000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA DUP6 STOP CALL GASLIMIT XOR 0xE7 PUSH10 0xEE5F427E1DB3A4CD8578 DUP3 CALLCODE PUSH17 0xF0662D85B742889E0C622864736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "213:1467:2:-:0;;;350:50;5:9:-1;2:2;;;27:1;24;17:12;2:2;350:50:2;385:10;377:5;;:18;;;;;;;;;;;;;;;;;;213:1467;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c80630d8e6e2c1461005a5780633ccfd60b146100855780633e47d6f31461008f5780636e5b6b28146100f457806398d5fdca14610143578063b60d42881461016e575b600080fd5b34801561006657600080fd5b5061006f610178565b6040518082815260200191505060405180910390f35b61008d610219565b005b34801561009b57600080fd5b506100de600480360360208110156100b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610262565b6040518082815260200191505060405180910390f35b34801561010057600080fd5b5061012d6004803603602081101561011757600080fd5b810190808035906020019092919050505061027a565b6040518082815260200191505060405180910390f35b34801561014f57600080fd5b506101586102a9565b6040518082815260200191505060405180910390f35b61017661037c565b005b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d857600080fd5b505afa1580156101ec573d6000803e3d6000fd5b505050506040513d602081101561020257600080fd5b810190808051906020019092919050505091505090565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561025f573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b6000806102856102a9565b90506000670de0b6b3a76400008483028161029c57fe5b0490508092505050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561030b57600080fd5b505afa15801561031f573d6000803e3d6000fd5b505050506040513d60a081101561033557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050915050809250505090565b600061232890508061038d3461027a565b1015610401576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75206e65656420746f207370656e66206d6f72652045544821000000000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505056fea2646970667358221220ca8500f14518e769ee5f427e1db3a4cd857882f270f0662d85b742889e0c622864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH2 0x37C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x285 PUSH2 0x2A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x29C JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2328 SWAP1 POP DUP1 PUSH2 0x38D CALLVALUE PUSH2 0x27A JUMP JUMPDEST LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F75206E65656420746F207370656E66206D6F726520455448210000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA DUP6 STOP CALL GASLIMIT XOR 0xE7 PUSH10 0xEE5F427E1DB3A4CD8578 DUP3 CALLCODE PUSH17 0xF0662D85B742889E0C622864736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "213:1467:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;789:194:2;;5:9:-1;2:2;;;27:1;24;17:12;2:2;789:194:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1541:137;;;:::i;:::-;;272:56;;5:9:-1;2:2;;;27:1;24;17:12;2:2;272:56:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;272:56:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1293:244;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1293:244:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1293:244:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;987:276;;5:9:-1;2:2;;;27:1;24;17:12;2:2;987:276:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;497:288;;;:::i;:::-;;789:194;832:7;847:31;903:42;847:99;;959:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;959:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;959:19:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;959:19:2;;;;;;;;;;;;;;;;952:26;;;789:194;:::o;1541:137::-;1630:10;:19;;:43;1650:21;1630:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1630:43:2;1541:137::o;272:56::-;;;;;;;;;;;;;;;;;:::o;1293:244::-;1360:7;1375:16;1394:10;:8;:10::i;:::-;1375:29;;1410:22;1460:19;1447:9;1436:8;:20;1435:44;;;;;;1410:69;;1492:14;1485:21;;;;1293:244;;;:::o;987:276::-;1028:7;1043:31;1099:42;1043:99;;1150:13;1170:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1170:27:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1170:27:2;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1170:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:49;;;;;;1218:6;1203:22;;;;987:276;:::o;497:288::-;577:18;598:12;577:33;;685:10;653:28;671:9;653:17;:28::i;:::-;:42;;645:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:9;734:21;:33;756:10;734:33;;;;;;;;;;;;;;;;:46;;;;;;;;;;;497:288;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "231600",
								"executionCost": "21141",
								"totalCost": "252741"
							},
							"external": {
								"addressToAmountFunded(address)": "1191",
								"fund()": "infinite",
								"getConversionRate(uint256)": "infinite",
								"getPrice()": "infinite",
								"getVersion()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 213,
									"end": 1680,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 350,
									"end": 400,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 350,
									"end": 400,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 385,
									"end": 395,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 377,
									"end": 382,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 382,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 377,
									"end": 395,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 1680,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca8500f14518e769ee5f427e1db3a4cd857882f270f0662d85b742889e0c622864736f6c63430006060033",
									".code": [
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "D8E6E2C"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "3E47D6F3"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "6E5B6B28"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "98D5FDCA"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "B60D4288"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 789,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 789,
											"end": 983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 497,
											"end": 785,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 497,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 497,
											"end": 785,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 789,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 832,
											"end": 839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "54FD4D50"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 952,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 789,
											"end": 983,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1649,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1649,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1650,
											"end": 1671,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1678,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 272,
											"end": 328,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1394,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1394,
											"end": 1404,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1404,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1394,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1447,
											"end": 1456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1506,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1537,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 1043,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 497,
											"end": 785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 610,
											"name": "PUSH",
											"source": 2,
											"value": "2328"
										},
										{
											"begin": 577,
											"end": 610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 577,
											"end": 610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 685,
											"end": 695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 653,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 653,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 681,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 653,
											"end": 681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 653,
											"end": 695,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 653,
											"end": 695,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206E65656420746F207370656E66206D6F726520455448210000000000"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 645,
											"end": 727,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 645,
											"end": 727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 771,
											"end": 780,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 734,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 756,
											"end": 766,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 734,
											"end": 780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 497,
											"end": 785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 497,
											"end": 785,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addressToAmountFunded(address)": "3e47d6f3",
							"fund()": "b60d4288",
							"getConversionRate(uint256)": "6e5b6b28",
							"getPrice()": "98d5fdca",
							"getVersion()": "0d8e6e2c",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"contracts/FundMe.sol\":{\"keccak256\":\"0x285a9ee265e8310ac7dfb5cf378cda822b0cf480612f7b203a7ac0ef954d4edd\",\"urls\":[\"bzz-raw://6fcb44e385a5397c659432d254e59cf7d39e5c1e9ff35e5b4968910a30275627\",\"dweb:/ipfs/Qmddcz1Y7GbQcCAYtR3vav4excpyUViZYWE54WM5fg2547\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 6,
												"src": "156:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:19:0"
									},
									"scope": 45,
									"src": "94:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "237:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:27:0"
									},
									"scope": 45,
									"src": "172:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "314:21:0"
									},
									"scope": 45,
									"src": "261:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "578:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "662:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "683:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "708:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "733:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:129:0"
									},
									"scope": 45,
									"src": "551:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "835:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "878:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "903:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "928:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:129:0"
									},
									"scope": 45,
									"src": "766:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:903:0"
						}
					],
					"src": "32:929:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							184
						]
					},
					"id": 185,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:1",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "930:95:1",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 73,
														"src": "936:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "948:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 65,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "967:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 66,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "972:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "959:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "1019:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 72,
												"nodeType": "Return",
												"src": "1012:8:1"
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:1",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `+` operator.\n    * Requirements:\n- Addition cannot overflow."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "876:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "887:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "921:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:1"
									},
									"scope": 184,
									"src": "863:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1344:98:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1358:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1363:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:1"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 99,
														"src": "1405:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1417:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1421:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "1436:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 98,
												"nodeType": "Return",
												"src": "1429:8:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n    * Counterpart to Solidity's `-` operator.\n    * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1290:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1301:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1335:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:1"
									},
									"scope": 184,
									"src": "1277:165:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1737:351:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1948:35:1",
												"trueBody": {
													"id": 115,
													"nodeType": "Block",
													"src": "1960:23:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 109,
															"id": 114,
															"nodeType": "Return",
															"src": "1968:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 134,
														"src": "1989:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2001:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2005:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 124,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2024:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2029:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 132,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 118,
													"src": "2082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 133,
												"nodeType": "Return",
												"src": "2075:8:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:1",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `*` operator.\n    * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1683:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1694:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1728:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:1"
									},
									"scope": 184,
									"src": "1670:418:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2596:237:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "2672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:1"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 160,
														"src": "2714:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2726:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2730:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2827:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 159,
												"nodeType": "Return",
												"src": "2820:8:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:1",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2542:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2553:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2587:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:1"
									},
									"scope": 184,
									"src": "2529:304:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3330:72:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3344:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3392:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 179,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "3396:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 181,
												"nodeType": "Return",
												"src": "3385:12:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3321:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:1"
									},
									"scope": 184,
									"src": "3263:139:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 185,
							"src": "621:2783:1"
						}
					],
					"src": "32:3373:1"
				},
				"id": 1
			},
			"contracts/FundMe.sol": {
				"ast": {
					"absolutePath": "contracts/FundMe.sol",
					"exportedSymbols": {
						"FundMe": [
							316
						]
					},
					"id": 317,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"id": 187,
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 46,
							"src": "66:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"id": 188,
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 185,
							"src": "143:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "FundMe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 191,
									"libraryName": {
										"contractScope": null,
										"id": 189,
										"name": "SafeMathChainlink",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 184,
										"src": "239:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathChainlink_$184",
											"typeString": "library SafeMathChainlink"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "233:36:2",
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "261:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3e47d6f3",
									"id": 195,
									"mutability": "mutable",
									"name": "addressToAmountFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 316,
									"src": "272:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 194,
										"keyType": {
											"id": 192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "280:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "272:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "291:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 316,
									"src": "332:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 196,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "371:29:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 200,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "377:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 201,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "385:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "385:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "377:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "377:18:2"
											}
										]
									},
									"documentation": null,
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:2"
									},
									"scope": 316,
									"src": "350:50:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "528:257:2",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "minimumUSD",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 235,
														"src": "577:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_9000_by_1",
														"typeString": "int_const 9000"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3530",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "598:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "603:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "608:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "598:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9000_by_1",
														"typeString": "int_const 9000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "577:33:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 219,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "671:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "671:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 218,
																	"name": "getConversionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "653:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "653:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "minimumUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "685:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "653:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f75206e65656420746f207370656e66206d6f72652045544821",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "697:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7d5a03f2ea8e0b6ddc2a1674e2186f494c202829a644d80fad5d61246128e56",
																"typeString": "literal_string \"You need to spenf more ETH!\""
															},
															"value": "You need to spenf more ETH!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7d5a03f2ea8e0b6ddc2a1674e2186f494c202829a644d80fad5d61246128e56",
																"typeString": "literal_string \"You need to spenf more ETH!\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "645:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "645:82:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 227,
															"name": "addressToAmountFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "734:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 230,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 228,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "756:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "734:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 231,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "771:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "771:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "734:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "734:46:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b60d4288",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:2:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "528:0:2"
									},
									"scope": 316,
									"src": "497:288:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "841:142:2",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 251,
														"src": "847:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 241,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "847:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "903:42:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 243,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "881:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "847:99:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 247,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "959:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 240,
												"id": 250,
												"nodeType": "Return",
												"src": "952:26:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0d8e6e2c",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:2:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "832:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:9:2"
									},
									"scope": 316,
									"src": "789:194:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1037:226:2",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 274,
														"src": "1043:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 257,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "1043:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1099:42:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 259,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1077:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1043:99:2"
											},
											{
												"assignments": [
													null,
													264,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "answer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 274,
														"src": "1150:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 263,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1150:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 268,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 265,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "1170:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1170:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1148:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 271,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1218:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1210:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1210:7:2",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1210:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 273,
												"nodeType": "Return",
												"src": "1203:22:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "98d5fdca",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:2:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "1028:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:9:2"
									},
									"scope": 316,
									"src": "987:276:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1369:168:2",
										"statements": [
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "ethPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 298,
														"src": "1375:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1375:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 284,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "1394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1375:29:2"
											},
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "ethAmountInUsd",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 298,
														"src": "1410:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1410:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 289,
																	"name": "ethPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "1436:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "1447:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1436:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 292,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1435:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31303030303030303030303030303030303030",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1460:19:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "1435:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1410:69:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 296,
													"name": "ethAmountInUsd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "1492:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 281,
												"id": 297,
												"nodeType": "Return",
												"src": "1485:21:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6e5b6b28",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConversionRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "ethAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 299,
												"src": "1320:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1319:19:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 299,
												"src": "1360:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1359:9:2"
									},
									"scope": 316,
									"src": "1293:244:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1576:102:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 309,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "1658:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FundMe_$316",
																			"typeString": "contract FundMe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FundMe_$316",
																			"typeString": "contract FundMe"
																		}
																	],
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1650:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 307,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1650:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1650:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1650:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1630:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1630:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1630:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "1630:43:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3ccfd60b",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1558:2:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:0:2"
									},
									"scope": 316,
									"src": "1541:137:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 317,
							"src": "213:1467:2"
						}
					],
					"src": "33:1648:2"
				},
				"id": 2
			}
		}
	}
}